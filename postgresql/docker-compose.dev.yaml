services:

  vault-agent-for-pg:
    image: hashicorp/vault:1.20.3
    container_name: vault_agent_for_pg_container
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    volumes:
      - ./vault_agent_config:/etc/vault-agent-config
      - ./vault_secrets:/etc/secrets   # сюда Vault Agent положит .env файл с секретами
    command: vault agent -config=/etc/vault-agent-config/config.hcl
    cap_add:
      - IPC_LOCK
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "test", "-f", "/etc/secrets/.env"]
      interval: 10s
      start_period: 5s
      retries: 5
      timeout: 3s

  postgres:
    image: postgres:17-alpine
    container_name: postgres_container
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
      - ./wait-for-file.sh:/wait-for-file.sh
      - ./vault_secrets:/etc/secrets
    entrypoint: ["/wait-for-file.sh"]
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 10s
      timeout: 10s
      start_period: 5s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    depends_on:
      vault-agent-for-pg:
        condition: service_healthy
    networks:
      - backend-network

volumes:
  pgdata:
    driver: local
    
networks:
  backend-network:
    external: true